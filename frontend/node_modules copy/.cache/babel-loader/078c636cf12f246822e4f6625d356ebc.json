{"remainingRequest":"C:\\inżynierka\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\inżynierka\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\inżynierka\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\inżynierka\\frontend\\src\\modules\\posts\\views\\AddPlace.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\inżynierka\\frontend\\src\\modules\\posts\\views\\AddPlace.vue","mtime":1648162687688},{"path":"C:\\inżynierka\\frontend\\babel.config.js","mtime":1645547932946},{"path":"C:\\inżynierka\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645547150279},{"path":"C:\\inżynierka\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1645547152282},{"path":"C:\\inżynierka\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645547150279},{"path":"C:\\inżynierka\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1645547152770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACAA;AACAC;AADA,GADA;AAIAC,MAJA,kBAIA;AAAA;;AACA;AACAC,sBADA;AAEAC,kBAFA;AAGAC,qBAHA;AAIAC,gBAJA;AAKAC,yBALA;AAMAC,iEANA;AAOAC,mBACA;AACA;AACA;AACAC;AACA;AAAA;AAAA;AACAC;AACA;;AACAC;AACA,SALA;AAMA;AACA,OAXA,EAYA;AAAA,eACA,MACA;AAAA;AAAA,UADA,IAEA,iFAHA;AAAA,OAZA;AAPA;AAyBA,GA9BA;AA+BAC;AACAC,WADA,qBACA;AACA;AACAC,sBACA,cADA,EAEA,0CAFA;AAIAA;AACAA;AACA;AACAA;AACA,OAFA;AAGAC;AACAC,eACAC,IADA,CACA,WADA,EACAH,QADA,EACA;AACAI,iDACAF,gBADA;AAEA;AAFA;AADA,OADA,EAOAG,KAPA,CAOA;AACAJ;AACAA;AACA,OAVA;AAWA,KAxBA;AAyBAK,cAzBA,sBAyBAC,KAzBA,EAyBA;AAAA;;AACA;AACA;AACA;;AACAA;AACA;AACAC;AACA;;AACAA;AACA;AACA;AACA;AACAC;AACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,2BADA,GACAC,oBADA;AAAA;AAAA,2BAEAC,eACAC,IADA,CACA;AAAA;AAAA,qBADA,EAEAA,IAFA,CAGA;AAAA,6BACA;AACAC;AADA,wBADA;AAAA,qBAHA,CAFA;;AAAA;AAEAC,wBAFA;AAUAJ;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,SAjBA;AAkBA,OAtBA;AAuBAV;AACA,KArDA;AAsDAe,YAtDA,oBAsDAC,GAtDA,EAsDA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACAC;AACAC;AACA;AACA,OALA,MAKA;AACA;AACAA;AACAD;AACA;AACA;;AACAE;AACAA;AACA;AACAC;AACA;AACA,KA7EA;AA8EAC,WA9EA,qBA8EA;AACA;AACA,uBACA,gEADA;AAEA;;AACA;AACAC,oCACAC,4CADA;AAGA;;AACA;AACA,KAzFA;AA0FAC,YA1FA,oBA0FAC,KA1FA,EA0FA;AACAA;AACA;AACA,KA7FA;AA8FAC,aA9FA,qBA8FAD,KA9FA,EA8FA;AACAA;AACA;AACA,KAjGA;AAkGAE,QAlGA,gBAkGAF,KAlGA,EAkGA;AAAA;;AACAA;AACA;;AACA;;AACA;AACA;AAvGA;AA/BA","names":["components","LocalizationSelect","data","localization","category","description","images","convertedImages","allowedTypes","imageRules","v","hasDuplicates","checkedValues","methods","addPost","formData","console","axiosAPI","post","headers","catch","onAddFiles","files","reader","image","resized","self","fetch","then","type","file","resizeMe","img","height","width","canvas","ctx","imgName","result","Math","dragover","event","dragleave","drop"],"sourceRoot":"src/modules/posts/views","sources":["AddPlace.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-card>\r\n      <v-text-field\r\n        class=\"mt-5\"\r\n        v-model=\"category\"\r\n        label=\"Kategoria\"\r\n      ></v-text-field>\r\n      <v-textarea class=\"mt-5\" v-model=\"description\" label=\"Opis\"></v-textarea>\r\n      <div @dragover=\"dragover\" @dragleave=\"dragleave\" @drop=\"drop\">\r\n        <v-file-input\r\n          accept=\"image/png, image/jpeg, image/bmp, image/img\"\r\n          prepend-icon=\"mdi-camera\"\r\n          ref=\"imginput\"\r\n          chips\r\n          multiple\r\n          label=\"Zdjęcia\"\r\n          :rules=\"imageRules\"\r\n          v-model=\"images\"\r\n          @change=\"onAddFiles\"\r\n        ></v-file-input>\r\n      </div>\r\n      <v-btn color=\"success\" @click=\"addPost\">dodaj </v-btn>\r\n    </v-card>\r\n    <localization-select ref=\"localizationselect\" />\r\n  </v-container>\r\n</template>\r\n<script>\r\nimport { axiosAPI } from \"@/axiosAPI\";\r\nimport LocalizationSelect from \"../components/LocalizationSelect.vue\";\r\nexport default {\r\n  components: {\r\n    LocalizationSelect,\r\n  },\r\n  data() {\r\n    return {\r\n      localization: \"\",\r\n      category: \"\",\r\n      description: \"\",\r\n      images: [],\r\n      convertedImages: [],\r\n      allowedTypes: \"image/png, image/jpeg, image/bmp, image/img\",\r\n      imageRules: [\r\n        (v) => {\r\n          var hasDuplicates = false;\r\n          var checkedValues = [];\r\n          v.forEach((value) => {\r\n            if (checkedValues.some((val) => val.name == value.name)) {\r\n              hasDuplicates = true;\r\n            }\r\n            checkedValues.push(value);\r\n          });\r\n          return !hasDuplicates || \"Dodano już podany plik\";\r\n        },\r\n        (v) =>\r\n          !v ||\r\n          !v.some((value) => !this.allowedTypes.includes(value.type)) ||\r\n          \"Podano niewłaściwy format pliku. Dopuszczalne formaty: png, jpg, jpeg, bmp, img\",\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    addPost() {\r\n      const formData = new FormData();\r\n      formData.append(\r\n        \"localization\",\r\n        this.$refs.localizationselect.markerLatLng\r\n      );\r\n      formData.append(\"category\", this.category);\r\n      formData.append(\"description\", this.description);\r\n      this.convertedImages.forEach((image) => {\r\n        formData.append(\"images\", image, image.name);\r\n      });\r\n      console.log(formData.getAll(\"images\"));\r\n      axiosAPI\r\n        .post(\"/api/post\", formData, {\r\n          headers: {\r\n            ...axiosAPI.headers,\r\n            \"content-type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\");\r\n          console.log(err);\r\n        });\r\n    },\r\n    onAddFiles(files) {\r\n      if (files.length == 0) {\r\n        this.convertedImages = [];\r\n      }\r\n      files.forEach((file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsArrayBuffer(file);\r\n        const self = this;\r\n        reader.onload = function (event) {\r\n          var blob = new Blob([event.target.result]);\r\n          var blobURL = URL.createObjectURL(blob);\r\n          var image = new Image();\r\n          image.src = blobURL;\r\n          image.onload = async function () {\r\n            var resized = self.resizeMe(image);\r\n            let file = await fetch(resized)\r\n              .then((r) => r.blob())\r\n              .then(\r\n                (blobFile) =>\r\n                  new File([blobFile], self.imgName() + \".jpg\", {\r\n                    type: \"image/jpeg\",\r\n                  })\r\n              );\r\n            self.convertedImages.push(file);\r\n          };\r\n        };\r\n      });\r\n      console.log(this.convertedImages);\r\n    },\r\n    resizeMe(img) {\r\n      var canvas = document.createElement(\"canvas\");\r\n\r\n      var width = img.width;\r\n      var height = img.height;\r\n      var max_width = 800;\r\n      var max_height = 800;\r\n      if (width > height) {\r\n        if (width > max_width) {\r\n          height = Math.round((height *= max_width / width));\r\n          width = max_width;\r\n        }\r\n      } else {\r\n        if (height > max_height) {\r\n          width = Math.round((width *= max_height / height));\r\n          height = max_height;\r\n        }\r\n      }\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      var ctx = canvas.getContext(\"2d\");\r\n      ctx.drawImage(img, 0, 0, width, height);\r\n      return canvas.toDataURL(\"image/jpeg\", 0.8);\r\n    },\r\n    imgName() {\r\n      var result = \"\";\r\n      var characters =\r\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n      var charactersLength = characters.length;\r\n      for (var i = 0; i < 20; i++) {\r\n        result += characters.charAt(\r\n          Math.floor(Math.random() * charactersLength)\r\n        );\r\n      }\r\n      return result;\r\n    },\r\n    dragover(event) {\r\n      event.preventDefault();\r\n      this.$refs.imginput.focus();\r\n    },\r\n    dragleave(event) {\r\n      event.preventDefault();\r\n      this.$refs.imginput.blur();\r\n    },\r\n    drop(event) {\r\n      event.preventDefault();\r\n      this.onAddFiles(Array.from(event.dataTransfer.files));\r\n      this.images.push(...event.dataTransfer.files);\r\n      this.$refs.imginput.validate();\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped></style>\r\n"]}]}