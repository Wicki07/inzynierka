{"remainingRequest":"C:\\inżynierka\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\inżynierka\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\inżynierka\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\inżynierka\\frontend\\src\\components\\post\\AddPlace.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\inżynierka\\frontend\\src\\components\\post\\AddPlace.vue","mtime":1646668041710},{"path":"C:\\inżynierka\\frontend\\babel.config.js","mtime":1645547932946},{"path":"C:\\inżynierka\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645547150279},{"path":"C:\\inżynierka\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1645547152282},{"path":"C:\\inżynierka\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645547150279},{"path":"C:\\inżynierka\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1645547152770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACAA;AACAC,oBADA;AAEAC;AAFA,GADA;AAKAC,MALA,kBAKA;AAAA;;AACA;AACAC,sBADA;AAEAC,kBAFA;AAGAC,qBAHA;AAIAC,gBAJA;AAKAC,yBALA;AAMAC,iEANA;AAOAC,mBACA;AACA;AACA;AACAC;AACA;AAAA;AAAA;AACAC;AACA;;AACAC;AACA,SALA;AAMA;AACA,OAXA,EAYA;AAAA,eACA,MACA;AAAA;AAAA,UADA,IAEA,iFAHA;AAAA,OAZA;AAPA;AAyBA,GA/BA;AAgCAC;AACAC,WADA,qBACA;AAAA;;AACA;AACAC;AACAA;AACAA;AACA;AACAA;AACA,OAFA;AAGAC;AACAC,eACAC,IADA,CACA,WADA,EACAH,QADA,EACA;AACAI,iDACAF,gBADA;AAEA;AAFA;AADA,OADA,EAOAG,IAPA,CAOA;AACAC;;AACA;AACA,OAVA,EAWAC,KAXA,CAWA;AACAN;AACAA;AACA,OAdA;AAeA,KAzBA;AA0BAO,cA1BA,sBA0BAC,KA1BA,EA0BA;AAAA;;AACA;AACA;AACA;;AACAA;AACA;AACAC;AACA;;AACAA;AACA;AACA;AACA;AACAC;AACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,2BADA,GACAC,oBADA;AAAA;AAAA,2BAEAC,eACAT,IADA,CACA;AAAA;AAAA,qBADA,EAEAA,IAFA,CAGA;AAAA,6BACA;AAAAU;AAAA,wBADA;AAAA,qBAHA,CAFA;;AAAA;AAEAC,wBAFA;AAQAH;;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,SAfA;AAgBA,OApBA;AAqBA,KAnDA;AAoDAI,YApDA,oBAoDAC,GApDA,EAoDA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACAC;AACAC;AACA;AACA,OALA,MAKA;AACA;AACAA;AACAD;AACA;AACA;;AACAE;AACAA;AACA;AACAC;AACA;AACA,KA3EA;AA4EAC,WA5EA,qBA4EA;AACA;AACA,uBACA,gEADA;AAEA;;AACA;AACAC,oCACAC,4CADA;AAGA;;AACA;AACA,KAvFA;AAwFAC,YAxFA,oBAwFAC,KAxFA,EAwFA;AACAA;AACA;AACA,KA3FA;AA4FAC,aA5FA,qBA4FAD,KA5FA,EA4FA;AACAA;AACA;AACA,KA/FA;AAgGAE,QAhGA,gBAgGAF,KAhGA,EAgGA;AAAA;;AACAA;AACA;;AACA;;AACA;AACA;AArGA;AAhCA","names":["components","MapTest","LeafLetGeodecoder","data","localization","category","description","images","convertedImages","allowedTypes","imageRules","v","hasDuplicates","checkedValues","methods","addPost","formData","console","axiosAPI","post","headers","then","localStorage","catch","onAddFiles","files","reader","image","resized","self","fetch","type","file","resizeMe","img","height","width","canvas","ctx","imgName","result","Math","dragover","event","dragleave","drop"],"sourceRoot":"src/components/post","sources":["AddPlace.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-card>\n      <v-text-field\n        class=\"mt-5\"\n        v-model=\"localization\"\n        label=\"Lokalizacja\"\n      ></v-text-field>\n      <v-text-field\n        class=\"mt-5\"\n        v-model=\"category\"\n        label=\"Kategoria\"\n      ></v-text-field>\n      <v-textarea class=\"mt-5\" v-model=\"description\" label=\"Opis\"></v-textarea>\n      <div @dragover=\"dragover\" @dragleave=\"dragleave\" @drop=\"drop\">\n        <v-file-input\n          accept=\"image/png, image/jpeg, image/bmp, image/img\"\n          prepend-icon=\"mdi-camera\"\n          ref=\"imginput\"\n          chips\n          multiple\n          label=\"Zdjęcia\"\n          :rules=\"imageRules\"\n          v-model=\"images\"\n          @change=\"onAddFiles\"\n        ></v-file-input>\n      </div>\n      <v-btn color=\"success\" @click=\"addPost\">dodaj </v-btn>\n    </v-card>\n    <map-test></map-test>\n    <leaf-let-geodecoder/>\n  </v-container>\n</template>\n<script>\nimport { axiosAPI } from \"@/axiosAPI\";\nimport MapTest from \"./MapTest.vue\";\nimport LeafLetGeodecoder from \"./LeafLetGeocoder.jsx\"\nexport default {\n  components: {\n    MapTest,\n    LeafLetGeodecoder\n  },\n  data() {\n    return {\n      localization: \"\",\n      category: \"\",\n      description: \"\",\n      images: [],\n      convertedImages: [],\n      allowedTypes: \"image/png, image/jpeg, image/bmp, image/img\",\n      imageRules: [\n        (v) => {\n          var hasDuplicates = false;\n          var checkedValues = [];\n          v.forEach((value) => {\n            if (checkedValues.some((val) => val.name == value.name)) {\n              hasDuplicates = true;\n            }\n            checkedValues.push(value);\n          });\n          return !hasDuplicates || \"Dodano już podany plik\";\n        },\n        (v) =>\n          !v ||\n          !v.some((value) => !this.allowedTypes.includes(value.type)) ||\n          \"Podano niewłaściwy format pliku. Dopuszczalne formaty: png, jpg, jpeg, bmp, img\",\n      ],\n    };\n  },\n  methods: {\n    addPost() {\n      const formData = new FormData();\n      formData.append(\"localization\", this.localization);\n      formData.append(\"category\", this.category);\n      formData.append(\"description\", this.description);\n      this.convertedImages.forEach((image) => {\n        formData.append(\"images\", image, image.name);\n      });\n      console.log(formData.getAll(\"images\"));\n      axiosAPI\n        .post(\"/api/post\", formData, {\n          headers: {\n            ...axiosAPI.headers,\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          localStorage.setItem(\"token\", res.data.token);\n          this.setUser(res.data.user);\n        })\n        .catch((err) => {\n          console.log(\"err\");\n          console.log(err);\n        });\n    },\n    onAddFiles(files) {\n      if (files.length == 0) {\n        this.convertedImages = [];\n      }\n      files.forEach((file) => {\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        const self = this;\n        reader.onload = function (event) {\n          var blob = new Blob([event.target.result]);\n          var blobURL = URL.createObjectURL(blob);\n          var image = new Image();\n          image.src = blobURL;\n          image.onload = async function () {\n            var resized = self.resizeMe(image);\n            let file = await fetch(resized)\n              .then((r) => r.blob())\n              .then(\n                (blobFile) =>\n                  new File([blobFile], self.imgName(), { type: \"image/png\" })\n              );\n            self.convertedImages.push(file);\n          };\n        };\n      });\n    },\n    resizeMe(img) {\n      var canvas = document.createElement(\"canvas\");\n\n      var width = img.width;\n      var height = img.height;\n      var max_width = 800;\n      var max_height = 800;\n      if (width > height) {\n        if (width > max_width) {\n          height = Math.round((height *= max_width / width));\n          width = max_width;\n        }\n      } else {\n        if (height > max_height) {\n          width = Math.round((width *= max_height / height));\n          height = max_height;\n        }\n      }\n      canvas.width = width;\n      canvas.height = height;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(img, 0, 0, width, height);\n      return canvas.toDataURL(\"image/jpeg\", 0.8);\n    },\n    imgName() {\n      var result = \"\";\n      var characters =\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n      var charactersLength = characters.length;\n      for (var i = 0; i < 20; i++) {\n        result += characters.charAt(\n          Math.floor(Math.random() * charactersLength)\n        );\n      }\n      return result;\n    },\n    dragover(event) {\n      event.preventDefault();\n      this.$refs.imginput.focus();\n    },\n    dragleave(event) {\n      event.preventDefault();\n      this.$refs.imginput.blur();\n    },\n    drop(event) {\n      event.preventDefault();\n      this.onAddFiles(Array.from(event.dataTransfer.files));\n      this.images.push(...event.dataTransfer.files);\n      this.$refs.imginput.validate();\n    },\n  },\n};\n</script>\n<style scoped></style>\n"]}]}