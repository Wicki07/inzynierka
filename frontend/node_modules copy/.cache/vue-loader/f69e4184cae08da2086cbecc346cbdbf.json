{"remainingRequest":"C:\\inżynierka\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\inżynierka\\frontend\\src\\modules\\posts\\views\\AddPlace.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\inżynierka\\frontend\\src\\modules\\posts\\views\\AddPlace.vue","mtime":1648162687688},{"path":"C:\\inżynierka\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645547150279},{"path":"C:\\inżynierka\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1645547152282},{"path":"C:\\inżynierka\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645547150279},{"path":"C:\\inżynierka\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1645547152770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBheGlvc0FQSSB9IGZyb20gIkAvYXhpb3NBUEkiOw0KaW1wb3J0IExvY2FsaXphdGlvblNlbGVjdCBmcm9tICIuLi9jb21wb25lbnRzL0xvY2FsaXphdGlvblNlbGVjdC52dWUiOw0KZXhwb3J0IGRlZmF1bHQgew0KICBjb21wb25lbnRzOiB7DQogICAgTG9jYWxpemF0aW9uU2VsZWN0LA0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBsb2NhbGl6YXRpb246ICIiLA0KICAgICAgY2F0ZWdvcnk6ICIiLA0KICAgICAgZGVzY3JpcHRpb246ICIiLA0KICAgICAgaW1hZ2VzOiBbXSwNCiAgICAgIGNvbnZlcnRlZEltYWdlczogW10sDQogICAgICBhbGxvd2VkVHlwZXM6ICJpbWFnZS9wbmcsIGltYWdlL2pwZWcsIGltYWdlL2JtcCwgaW1hZ2UvaW1nIiwNCiAgICAgIGltYWdlUnVsZXM6IFsNCiAgICAgICAgKHYpID0+IHsNCiAgICAgICAgICB2YXIgaGFzRHVwbGljYXRlcyA9IGZhbHNlOw0KICAgICAgICAgIHZhciBjaGVja2VkVmFsdWVzID0gW107DQogICAgICAgICAgdi5mb3JFYWNoKCh2YWx1ZSkgPT4gew0KICAgICAgICAgICAgaWYgKGNoZWNrZWRWYWx1ZXMuc29tZSgodmFsKSA9PiB2YWwubmFtZSA9PSB2YWx1ZS5uYW1lKSkgew0KICAgICAgICAgICAgICBoYXNEdXBsaWNhdGVzID0gdHJ1ZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGNoZWNrZWRWYWx1ZXMucHVzaCh2YWx1ZSk7DQogICAgICAgICAgfSk7DQogICAgICAgICAgcmV0dXJuICFoYXNEdXBsaWNhdGVzIHx8ICJEb2Rhbm8ganXFvCBwb2RhbnkgcGxpayI7DQogICAgICAgIH0sDQogICAgICAgICh2KSA9Pg0KICAgICAgICAgICF2IHx8DQogICAgICAgICAgIXYuc29tZSgodmFsdWUpID0+ICF0aGlzLmFsbG93ZWRUeXBlcy5pbmNsdWRlcyh2YWx1ZS50eXBlKSkgfHwNCiAgICAgICAgICAiUG9kYW5vIG5pZXfFgmHFm2Npd3kgZm9ybWF0IHBsaWt1LiBEb3B1c3pjemFsbmUgZm9ybWF0eTogcG5nLCBqcGcsIGpwZWcsIGJtcCwgaW1nIiwNCiAgICAgIF0sDQogICAgfTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGFkZFBvc3QoKSB7DQogICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKA0KICAgICAgICAibG9jYWxpemF0aW9uIiwNCiAgICAgICAgdGhpcy4kcmVmcy5sb2NhbGl6YXRpb25zZWxlY3QubWFya2VyTGF0TG5nDQogICAgICApOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJjYXRlZ29yeSIsIHRoaXMuY2F0ZWdvcnkpOw0KICAgICAgZm9ybURhdGEuYXBwZW5kKCJkZXNjcmlwdGlvbiIsIHRoaXMuZGVzY3JpcHRpb24pOw0KICAgICAgdGhpcy5jb252ZXJ0ZWRJbWFnZXMuZm9yRWFjaCgoaW1hZ2UpID0+IHsNCiAgICAgICAgZm9ybURhdGEuYXBwZW5kKCJpbWFnZXMiLCBpbWFnZSwgaW1hZ2UubmFtZSk7DQogICAgICB9KTsNCiAgICAgIGNvbnNvbGUubG9nKGZvcm1EYXRhLmdldEFsbCgiaW1hZ2VzIikpOw0KICAgICAgYXhpb3NBUEkNCiAgICAgICAgLnBvc3QoIi9hcGkvcG9zdCIsIGZvcm1EYXRhLCB7DQogICAgICAgICAgaGVhZGVyczogew0KICAgICAgICAgICAgLi4uYXhpb3NBUEkuaGVhZGVycywNCiAgICAgICAgICAgICJjb250ZW50LXR5cGUiOiAibXVsdGlwYXJ0L2Zvcm0tZGF0YSIsDQogICAgICAgICAgfSwNCiAgICAgICAgfSkNCiAgICAgICAgLmNhdGNoKChlcnIpID0+IHsNCiAgICAgICAgICBjb25zb2xlLmxvZygiZXJyIik7DQogICAgICAgICAgY29uc29sZS5sb2coZXJyKTsNCiAgICAgICAgfSk7DQogICAgfSwNCiAgICBvbkFkZEZpbGVzKGZpbGVzKSB7DQogICAgICBpZiAoZmlsZXMubGVuZ3RoID09IDApIHsNCiAgICAgICAgdGhpcy5jb252ZXJ0ZWRJbWFnZXMgPSBbXTsNCiAgICAgIH0NCiAgICAgIGZpbGVzLmZvckVhY2goKGZpbGUpID0+IHsNCiAgICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsNCiAgICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOw0KICAgICAgICBjb25zdCBzZWxmID0gdGhpczsNCiAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChldmVudCkgew0KICAgICAgICAgIHZhciBibG9iID0gbmV3IEJsb2IoW2V2ZW50LnRhcmdldC5yZXN1bHRdKTsNCiAgICAgICAgICB2YXIgYmxvYlVSTCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7DQogICAgICAgICAgdmFyIGltYWdlID0gbmV3IEltYWdlKCk7DQogICAgICAgICAgaW1hZ2Uuc3JjID0gYmxvYlVSTDsNCiAgICAgICAgICBpbWFnZS5vbmxvYWQgPSBhc3luYyBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICB2YXIgcmVzaXplZCA9IHNlbGYucmVzaXplTWUoaW1hZ2UpOw0KICAgICAgICAgICAgbGV0IGZpbGUgPSBhd2FpdCBmZXRjaChyZXNpemVkKQ0KICAgICAgICAgICAgICAudGhlbigocikgPT4gci5ibG9iKCkpDQogICAgICAgICAgICAgIC50aGVuKA0KICAgICAgICAgICAgICAgIChibG9iRmlsZSkgPT4NCiAgICAgICAgICAgICAgICAgIG5ldyBGaWxlKFtibG9iRmlsZV0sIHNlbGYuaW1nTmFtZSgpICsgIi5qcGciLCB7DQogICAgICAgICAgICAgICAgICAgIHR5cGU6ICJpbWFnZS9qcGVnIiwNCiAgICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICk7DQogICAgICAgICAgICBzZWxmLmNvbnZlcnRlZEltYWdlcy5wdXNoKGZpbGUpOw0KICAgICAgICAgIH07DQogICAgICAgIH07DQogICAgICB9KTsNCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuY29udmVydGVkSW1hZ2VzKTsNCiAgICB9LA0KICAgIHJlc2l6ZU1lKGltZykgew0KICAgICAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpOw0KDQogICAgICB2YXIgd2lkdGggPSBpbWcud2lkdGg7DQogICAgICB2YXIgaGVpZ2h0ID0gaW1nLmhlaWdodDsNCiAgICAgIHZhciBtYXhfd2lkdGggPSA4MDA7DQogICAgICB2YXIgbWF4X2hlaWdodCA9IDgwMDsNCiAgICAgIGlmICh3aWR0aCA+IGhlaWdodCkgew0KICAgICAgICBpZiAod2lkdGggPiBtYXhfd2lkdGgpIHsNCiAgICAgICAgICBoZWlnaHQgPSBNYXRoLnJvdW5kKChoZWlnaHQgKj0gbWF4X3dpZHRoIC8gd2lkdGgpKTsNCiAgICAgICAgICB3aWR0aCA9IG1heF93aWR0aDsNCiAgICAgICAgfQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgaWYgKGhlaWdodCA+IG1heF9oZWlnaHQpIHsNCiAgICAgICAgICB3aWR0aCA9IE1hdGgucm91bmQoKHdpZHRoICo9IG1heF9oZWlnaHQgLyBoZWlnaHQpKTsNCiAgICAgICAgICBoZWlnaHQgPSBtYXhfaGVpZ2h0Ow0KICAgICAgICB9DQogICAgICB9DQogICAgICBjYW52YXMud2lkdGggPSB3aWR0aDsNCiAgICAgIGNhbnZhcy5oZWlnaHQgPSBoZWlnaHQ7DQogICAgICB2YXIgY3R4ID0gY2FudmFzLmdldENvbnRleHQoIjJkIik7DQogICAgICBjdHguZHJhd0ltYWdlKGltZywgMCwgMCwgd2lkdGgsIGhlaWdodCk7DQogICAgICByZXR1cm4gY2FudmFzLnRvRGF0YVVSTCgiaW1hZ2UvanBlZyIsIDAuOCk7DQogICAgfSwNCiAgICBpbWdOYW1lKCkgew0KICAgICAgdmFyIHJlc3VsdCA9ICIiOw0KICAgICAgdmFyIGNoYXJhY3RlcnMgPQ0KICAgICAgICAiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkiOw0KICAgICAgdmFyIGNoYXJhY3RlcnNMZW5ndGggPSBjaGFyYWN0ZXJzLmxlbmd0aDsNCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMjA7IGkrKykgew0KICAgICAgICByZXN1bHQgKz0gY2hhcmFjdGVycy5jaGFyQXQoDQogICAgICAgICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogY2hhcmFjdGVyc0xlbmd0aCkNCiAgICAgICAgKTsNCiAgICAgIH0NCiAgICAgIHJldHVybiByZXN1bHQ7DQogICAgfSwNCiAgICBkcmFnb3ZlcihldmVudCkgew0KICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsNCiAgICAgIHRoaXMuJHJlZnMuaW1naW5wdXQuZm9jdXMoKTsNCiAgICB9LA0KICAgIGRyYWdsZWF2ZShldmVudCkgew0KICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsNCiAgICAgIHRoaXMuJHJlZnMuaW1naW5wdXQuYmx1cigpOw0KICAgIH0sDQogICAgZHJvcChldmVudCkgew0KICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsNCiAgICAgIHRoaXMub25BZGRGaWxlcyhBcnJheS5mcm9tKGV2ZW50LmRhdGFUcmFuc2Zlci5maWxlcykpOw0KICAgICAgdGhpcy5pbWFnZXMucHVzaCguLi5ldmVudC5kYXRhVHJhbnNmZXIuZmlsZXMpOw0KICAgICAgdGhpcy4kcmVmcy5pbWdpbnB1dC52YWxpZGF0ZSgpOw0KICAgIH0sDQogIH0sDQp9Ow0K"},{"version":3,"sources":["AddPlace.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddPlace.vue","sourceRoot":"src/modules/posts/views","sourcesContent":["<template>\r\n  <v-container>\r\n    <v-card>\r\n      <v-text-field\r\n        class=\"mt-5\"\r\n        v-model=\"category\"\r\n        label=\"Kategoria\"\r\n      ></v-text-field>\r\n      <v-textarea class=\"mt-5\" v-model=\"description\" label=\"Opis\"></v-textarea>\r\n      <div @dragover=\"dragover\" @dragleave=\"dragleave\" @drop=\"drop\">\r\n        <v-file-input\r\n          accept=\"image/png, image/jpeg, image/bmp, image/img\"\r\n          prepend-icon=\"mdi-camera\"\r\n          ref=\"imginput\"\r\n          chips\r\n          multiple\r\n          label=\"Zdjęcia\"\r\n          :rules=\"imageRules\"\r\n          v-model=\"images\"\r\n          @change=\"onAddFiles\"\r\n        ></v-file-input>\r\n      </div>\r\n      <v-btn color=\"success\" @click=\"addPost\">dodaj </v-btn>\r\n    </v-card>\r\n    <localization-select ref=\"localizationselect\" />\r\n  </v-container>\r\n</template>\r\n<script>\r\nimport { axiosAPI } from \"@/axiosAPI\";\r\nimport LocalizationSelect from \"../components/LocalizationSelect.vue\";\r\nexport default {\r\n  components: {\r\n    LocalizationSelect,\r\n  },\r\n  data() {\r\n    return {\r\n      localization: \"\",\r\n      category: \"\",\r\n      description: \"\",\r\n      images: [],\r\n      convertedImages: [],\r\n      allowedTypes: \"image/png, image/jpeg, image/bmp, image/img\",\r\n      imageRules: [\r\n        (v) => {\r\n          var hasDuplicates = false;\r\n          var checkedValues = [];\r\n          v.forEach((value) => {\r\n            if (checkedValues.some((val) => val.name == value.name)) {\r\n              hasDuplicates = true;\r\n            }\r\n            checkedValues.push(value);\r\n          });\r\n          return !hasDuplicates || \"Dodano już podany plik\";\r\n        },\r\n        (v) =>\r\n          !v ||\r\n          !v.some((value) => !this.allowedTypes.includes(value.type)) ||\r\n          \"Podano niewłaściwy format pliku. Dopuszczalne formaty: png, jpg, jpeg, bmp, img\",\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    addPost() {\r\n      const formData = new FormData();\r\n      formData.append(\r\n        \"localization\",\r\n        this.$refs.localizationselect.markerLatLng\r\n      );\r\n      formData.append(\"category\", this.category);\r\n      formData.append(\"description\", this.description);\r\n      this.convertedImages.forEach((image) => {\r\n        formData.append(\"images\", image, image.name);\r\n      });\r\n      console.log(formData.getAll(\"images\"));\r\n      axiosAPI\r\n        .post(\"/api/post\", formData, {\r\n          headers: {\r\n            ...axiosAPI.headers,\r\n            \"content-type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\");\r\n          console.log(err);\r\n        });\r\n    },\r\n    onAddFiles(files) {\r\n      if (files.length == 0) {\r\n        this.convertedImages = [];\r\n      }\r\n      files.forEach((file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsArrayBuffer(file);\r\n        const self = this;\r\n        reader.onload = function (event) {\r\n          var blob = new Blob([event.target.result]);\r\n          var blobURL = URL.createObjectURL(blob);\r\n          var image = new Image();\r\n          image.src = blobURL;\r\n          image.onload = async function () {\r\n            var resized = self.resizeMe(image);\r\n            let file = await fetch(resized)\r\n              .then((r) => r.blob())\r\n              .then(\r\n                (blobFile) =>\r\n                  new File([blobFile], self.imgName() + \".jpg\", {\r\n                    type: \"image/jpeg\",\r\n                  })\r\n              );\r\n            self.convertedImages.push(file);\r\n          };\r\n        };\r\n      });\r\n      console.log(this.convertedImages);\r\n    },\r\n    resizeMe(img) {\r\n      var canvas = document.createElement(\"canvas\");\r\n\r\n      var width = img.width;\r\n      var height = img.height;\r\n      var max_width = 800;\r\n      var max_height = 800;\r\n      if (width > height) {\r\n        if (width > max_width) {\r\n          height = Math.round((height *= max_width / width));\r\n          width = max_width;\r\n        }\r\n      } else {\r\n        if (height > max_height) {\r\n          width = Math.round((width *= max_height / height));\r\n          height = max_height;\r\n        }\r\n      }\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      var ctx = canvas.getContext(\"2d\");\r\n      ctx.drawImage(img, 0, 0, width, height);\r\n      return canvas.toDataURL(\"image/jpeg\", 0.8);\r\n    },\r\n    imgName() {\r\n      var result = \"\";\r\n      var characters =\r\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n      var charactersLength = characters.length;\r\n      for (var i = 0; i < 20; i++) {\r\n        result += characters.charAt(\r\n          Math.floor(Math.random() * charactersLength)\r\n        );\r\n      }\r\n      return result;\r\n    },\r\n    dragover(event) {\r\n      event.preventDefault();\r\n      this.$refs.imginput.focus();\r\n    },\r\n    dragleave(event) {\r\n      event.preventDefault();\r\n      this.$refs.imginput.blur();\r\n    },\r\n    drop(event) {\r\n      event.preventDefault();\r\n      this.onAddFiles(Array.from(event.dataTransfer.files));\r\n      this.images.push(...event.dataTransfer.files);\r\n      this.$refs.imginput.validate();\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped></style>\r\n"]}]}