{"remainingRequest":"C:\\inżynierka\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\inżynierka\\frontend\\src\\components\\post\\AddPlace.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\inżynierka\\frontend\\src\\components\\post\\AddPlace.vue","mtime":1646668041710},{"path":"C:\\inżynierka\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645547150279},{"path":"C:\\inżynierka\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1645547152282},{"path":"C:\\inżynierka\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645547150279},{"path":"C:\\inżynierka\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1645547152770}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGF4aW9zQVBJIH0gZnJvbSAiQC9heGlvc0FQSSI7CmltcG9ydCBNYXBUZXN0IGZyb20gIi4vTWFwVGVzdC52dWUiOwppbXBvcnQgTGVhZkxldEdlb2RlY29kZXIgZnJvbSAiLi9MZWFmTGV0R2VvY29kZXIuanN4IgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTWFwVGVzdCwKICAgIExlYWZMZXRHZW9kZWNvZGVyCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9jYWxpemF0aW9uOiAiIiwKICAgICAgY2F0ZWdvcnk6ICIiLAogICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgIGltYWdlczogW10sCiAgICAgIGNvbnZlcnRlZEltYWdlczogW10sCiAgICAgIGFsbG93ZWRUeXBlczogImltYWdlL3BuZywgaW1hZ2UvanBlZywgaW1hZ2UvYm1wLCBpbWFnZS9pbWciLAogICAgICBpbWFnZVJ1bGVzOiBbCiAgICAgICAgKHYpID0+IHsKICAgICAgICAgIHZhciBoYXNEdXBsaWNhdGVzID0gZmFsc2U7CiAgICAgICAgICB2YXIgY2hlY2tlZFZhbHVlcyA9IFtdOwogICAgICAgICAgdi5mb3JFYWNoKCh2YWx1ZSkgPT4gewogICAgICAgICAgICBpZiAoY2hlY2tlZFZhbHVlcy5zb21lKCh2YWwpID0+IHZhbC5uYW1lID09IHZhbHVlLm5hbWUpKSB7CiAgICAgICAgICAgICAgaGFzRHVwbGljYXRlcyA9IHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY2hlY2tlZFZhbHVlcy5wdXNoKHZhbHVlKTsKICAgICAgICAgIH0pOwogICAgICAgICAgcmV0dXJuICFoYXNEdXBsaWNhdGVzIHx8ICJEb2Rhbm8ganXFvCBwb2RhbnkgcGxpayI7CiAgICAgICAgfSwKICAgICAgICAodikgPT4KICAgICAgICAgICF2IHx8CiAgICAgICAgICAhdi5zb21lKCh2YWx1ZSkgPT4gIXRoaXMuYWxsb3dlZFR5cGVzLmluY2x1ZGVzKHZhbHVlLnR5cGUpKSB8fAogICAgICAgICAgIlBvZGFubyBuaWV3xYJhxZtjaXd5IGZvcm1hdCBwbGlrdS4gRG9wdXN6Y3phbG5lIGZvcm1hdHk6IHBuZywganBnLCBqcGVnLCBibXAsIGltZyIsCiAgICAgIF0sCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgYWRkUG9zdCgpIHsKICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCJsb2NhbGl6YXRpb24iLCB0aGlzLmxvY2FsaXphdGlvbik7CiAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY2F0ZWdvcnkiLCB0aGlzLmNhdGVnb3J5KTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCJkZXNjcmlwdGlvbiIsIHRoaXMuZGVzY3JpcHRpb24pOwogICAgICB0aGlzLmNvbnZlcnRlZEltYWdlcy5mb3JFYWNoKChpbWFnZSkgPT4gewogICAgICAgIGZvcm1EYXRhLmFwcGVuZCgiaW1hZ2VzIiwgaW1hZ2UsIGltYWdlLm5hbWUpOwogICAgICB9KTsKICAgICAgY29uc29sZS5sb2coZm9ybURhdGEuZ2V0QWxsKCJpbWFnZXMiKSk7CiAgICAgIGF4aW9zQVBJCiAgICAgICAgLnBvc3QoIi9hcGkvcG9zdCIsIGZvcm1EYXRhLCB7CiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgIC4uLmF4aW9zQVBJLmhlYWRlcnMsCiAgICAgICAgICAgICJjb250ZW50LXR5cGUiOiAibXVsdGlwYXJ0L2Zvcm0tZGF0YSIsCiAgICAgICAgICB9LAogICAgICAgIH0pCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oInRva2VuIiwgcmVzLmRhdGEudG9rZW4pOwogICAgICAgICAgdGhpcy5zZXRVc2VyKHJlcy5kYXRhLnVzZXIpOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlcnIpID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJlcnIiKTsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgICAgfSk7CiAgICB9LAogICAgb25BZGRGaWxlcyhmaWxlcykgewogICAgICBpZiAoZmlsZXMubGVuZ3RoID09IDApIHsKICAgICAgICB0aGlzLmNvbnZlcnRlZEltYWdlcyA9IFtdOwogICAgICB9CiAgICAgIGZpbGVzLmZvckVhY2goKGZpbGUpID0+IHsKICAgICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgIHJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcihmaWxlKTsKICAgICAgICBjb25zdCBzZWxmID0gdGhpczsKICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFtldmVudC50YXJnZXQucmVzdWx0XSk7CiAgICAgICAgICB2YXIgYmxvYlVSTCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYik7CiAgICAgICAgICB2YXIgaW1hZ2UgPSBuZXcgSW1hZ2UoKTsKICAgICAgICAgIGltYWdlLnNyYyA9IGJsb2JVUkw7CiAgICAgICAgICBpbWFnZS5vbmxvYWQgPSBhc3luYyBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciByZXNpemVkID0gc2VsZi5yZXNpemVNZShpbWFnZSk7CiAgICAgICAgICAgIGxldCBmaWxlID0gYXdhaXQgZmV0Y2gocmVzaXplZCkKICAgICAgICAgICAgICAudGhlbigocikgPT4gci5ibG9iKCkpCiAgICAgICAgICAgICAgLnRoZW4oCiAgICAgICAgICAgICAgICAoYmxvYkZpbGUpID0+CiAgICAgICAgICAgICAgICAgIG5ldyBGaWxlKFtibG9iRmlsZV0sIHNlbGYuaW1nTmFtZSgpLCB7IHR5cGU6ICJpbWFnZS9wbmciIH0pCiAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgc2VsZi5jb252ZXJ0ZWRJbWFnZXMucHVzaChmaWxlKTsKICAgICAgICAgIH07CiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9LAogICAgcmVzaXplTWUoaW1nKSB7CiAgICAgIHZhciBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJjYW52YXMiKTsKCiAgICAgIHZhciB3aWR0aCA9IGltZy53aWR0aDsKICAgICAgdmFyIGhlaWdodCA9IGltZy5oZWlnaHQ7CiAgICAgIHZhciBtYXhfd2lkdGggPSA4MDA7CiAgICAgIHZhciBtYXhfaGVpZ2h0ID0gODAwOwogICAgICBpZiAod2lkdGggPiBoZWlnaHQpIHsKICAgICAgICBpZiAod2lkdGggPiBtYXhfd2lkdGgpIHsKICAgICAgICAgIGhlaWdodCA9IE1hdGgucm91bmQoKGhlaWdodCAqPSBtYXhfd2lkdGggLyB3aWR0aCkpOwogICAgICAgICAgd2lkdGggPSBtYXhfd2lkdGg7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGlmIChoZWlnaHQgPiBtYXhfaGVpZ2h0KSB7CiAgICAgICAgICB3aWR0aCA9IE1hdGgucm91bmQoKHdpZHRoICo9IG1heF9oZWlnaHQgLyBoZWlnaHQpKTsKICAgICAgICAgIGhlaWdodCA9IG1heF9oZWlnaHQ7CiAgICAgICAgfQogICAgICB9CiAgICAgIGNhbnZhcy53aWR0aCA9IHdpZHRoOwogICAgICBjYW52YXMuaGVpZ2h0ID0gaGVpZ2h0OwogICAgICB2YXIgY3R4ID0gY2FudmFzLmdldENvbnRleHQoIjJkIik7CiAgICAgIGN0eC5kcmF3SW1hZ2UoaW1nLCAwLCAwLCB3aWR0aCwgaGVpZ2h0KTsKICAgICAgcmV0dXJuIGNhbnZhcy50b0RhdGFVUkwoImltYWdlL2pwZWciLCAwLjgpOwogICAgfSwKICAgIGltZ05hbWUoKSB7CiAgICAgIHZhciByZXN1bHQgPSAiIjsKICAgICAgdmFyIGNoYXJhY3RlcnMgPQogICAgICAgICJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSI7CiAgICAgIHZhciBjaGFyYWN0ZXJzTGVuZ3RoID0gY2hhcmFjdGVycy5sZW5ndGg7CiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMjA7IGkrKykgewogICAgICAgIHJlc3VsdCArPSBjaGFyYWN0ZXJzLmNoYXJBdCgKICAgICAgICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNoYXJhY3RlcnNMZW5ndGgpCiAgICAgICAgKTsKICAgICAgfQogICAgICByZXR1cm4gcmVzdWx0OwogICAgfSwKICAgIGRyYWdvdmVyKGV2ZW50KSB7CiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIHRoaXMuJHJlZnMuaW1naW5wdXQuZm9jdXMoKTsKICAgIH0sCiAgICBkcmFnbGVhdmUoZXZlbnQpIHsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgdGhpcy4kcmVmcy5pbWdpbnB1dC5ibHVyKCk7CiAgICB9LAogICAgZHJvcChldmVudCkgewogICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB0aGlzLm9uQWRkRmlsZXMoQXJyYXkuZnJvbShldmVudC5kYXRhVHJhbnNmZXIuZmlsZXMpKTsKICAgICAgdGhpcy5pbWFnZXMucHVzaCguLi5ldmVudC5kYXRhVHJhbnNmZXIuZmlsZXMpOwogICAgICB0aGlzLiRyZWZzLmltZ2lucHV0LnZhbGlkYXRlKCk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["AddPlace.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"AddPlace.vue","sourceRoot":"src/components/post","sourcesContent":["<template>\n  <v-container>\n    <v-card>\n      <v-text-field\n        class=\"mt-5\"\n        v-model=\"localization\"\n        label=\"Lokalizacja\"\n      ></v-text-field>\n      <v-text-field\n        class=\"mt-5\"\n        v-model=\"category\"\n        label=\"Kategoria\"\n      ></v-text-field>\n      <v-textarea class=\"mt-5\" v-model=\"description\" label=\"Opis\"></v-textarea>\n      <div @dragover=\"dragover\" @dragleave=\"dragleave\" @drop=\"drop\">\n        <v-file-input\n          accept=\"image/png, image/jpeg, image/bmp, image/img\"\n          prepend-icon=\"mdi-camera\"\n          ref=\"imginput\"\n          chips\n          multiple\n          label=\"Zdjęcia\"\n          :rules=\"imageRules\"\n          v-model=\"images\"\n          @change=\"onAddFiles\"\n        ></v-file-input>\n      </div>\n      <v-btn color=\"success\" @click=\"addPost\">dodaj </v-btn>\n    </v-card>\n    <map-test></map-test>\n    <leaf-let-geodecoder/>\n  </v-container>\n</template>\n<script>\nimport { axiosAPI } from \"@/axiosAPI\";\nimport MapTest from \"./MapTest.vue\";\nimport LeafLetGeodecoder from \"./LeafLetGeocoder.jsx\"\nexport default {\n  components: {\n    MapTest,\n    LeafLetGeodecoder\n  },\n  data() {\n    return {\n      localization: \"\",\n      category: \"\",\n      description: \"\",\n      images: [],\n      convertedImages: [],\n      allowedTypes: \"image/png, image/jpeg, image/bmp, image/img\",\n      imageRules: [\n        (v) => {\n          var hasDuplicates = false;\n          var checkedValues = [];\n          v.forEach((value) => {\n            if (checkedValues.some((val) => val.name == value.name)) {\n              hasDuplicates = true;\n            }\n            checkedValues.push(value);\n          });\n          return !hasDuplicates || \"Dodano już podany plik\";\n        },\n        (v) =>\n          !v ||\n          !v.some((value) => !this.allowedTypes.includes(value.type)) ||\n          \"Podano niewłaściwy format pliku. Dopuszczalne formaty: png, jpg, jpeg, bmp, img\",\n      ],\n    };\n  },\n  methods: {\n    addPost() {\n      const formData = new FormData();\n      formData.append(\"localization\", this.localization);\n      formData.append(\"category\", this.category);\n      formData.append(\"description\", this.description);\n      this.convertedImages.forEach((image) => {\n        formData.append(\"images\", image, image.name);\n      });\n      console.log(formData.getAll(\"images\"));\n      axiosAPI\n        .post(\"/api/post\", formData, {\n          headers: {\n            ...axiosAPI.headers,\n            \"content-type\": \"multipart/form-data\",\n          },\n        })\n        .then((res) => {\n          localStorage.setItem(\"token\", res.data.token);\n          this.setUser(res.data.user);\n        })\n        .catch((err) => {\n          console.log(\"err\");\n          console.log(err);\n        });\n    },\n    onAddFiles(files) {\n      if (files.length == 0) {\n        this.convertedImages = [];\n      }\n      files.forEach((file) => {\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        const self = this;\n        reader.onload = function (event) {\n          var blob = new Blob([event.target.result]);\n          var blobURL = URL.createObjectURL(blob);\n          var image = new Image();\n          image.src = blobURL;\n          image.onload = async function () {\n            var resized = self.resizeMe(image);\n            let file = await fetch(resized)\n              .then((r) => r.blob())\n              .then(\n                (blobFile) =>\n                  new File([blobFile], self.imgName(), { type: \"image/png\" })\n              );\n            self.convertedImages.push(file);\n          };\n        };\n      });\n    },\n    resizeMe(img) {\n      var canvas = document.createElement(\"canvas\");\n\n      var width = img.width;\n      var height = img.height;\n      var max_width = 800;\n      var max_height = 800;\n      if (width > height) {\n        if (width > max_width) {\n          height = Math.round((height *= max_width / width));\n          width = max_width;\n        }\n      } else {\n        if (height > max_height) {\n          width = Math.round((width *= max_height / height));\n          height = max_height;\n        }\n      }\n      canvas.width = width;\n      canvas.height = height;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(img, 0, 0, width, height);\n      return canvas.toDataURL(\"image/jpeg\", 0.8);\n    },\n    imgName() {\n      var result = \"\";\n      var characters =\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n      var charactersLength = characters.length;\n      for (var i = 0; i < 20; i++) {\n        result += characters.charAt(\n          Math.floor(Math.random() * charactersLength)\n        );\n      }\n      return result;\n    },\n    dragover(event) {\n      event.preventDefault();\n      this.$refs.imginput.focus();\n    },\n    dragleave(event) {\n      event.preventDefault();\n      this.$refs.imginput.blur();\n    },\n    drop(event) {\n      event.preventDefault();\n      this.onAddFiles(Array.from(event.dataTransfer.files));\n      this.images.push(...event.dataTransfer.files);\n      this.$refs.imginput.validate();\n    },\n  },\n};\n</script>\n<style scoped></style>\n"]}]}